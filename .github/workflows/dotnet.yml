name: Publish and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish for Windows x64
        run: dotnet publish -c Release -r win-x64 -o out/win-x64 --self-contained false /p:PublishSingleFile=true

      - name: Publish for Linux x64
        run: dotnet publish -c Release -r linux-x64 -o out/linux-x64 --self-contained false /p:PublishSingleFile=true

      - name: Zip files
        run: |
          cd out/win-x64
          zip -r ../win-x64.zip *
          cd ../linux-x64
          zip -r ../linux-x64.zip *

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_RELEASE }}
        with:
          tag_name: 1.0
          release_name: 1.0
          draft: false
          prerelease: false

      - name: Upload Release Asset for Windows x64
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/win-x64.zip
          asset_name: win-x64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for Linux x64
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/linux-x64.zip
          asset_name: linux-x64.zip
          asset_content_type: application/zip
